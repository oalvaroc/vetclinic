package com.example.vetclinic.view;

import com.example.vetclinic.controller.Controller;
import com.example.vetclinic.model.Animal;
import com.example.vetclinic.model.Product;
import com.example.vetclinic.model.Client;
import com.example.vetclinic.model.Vet;
import com.example.vetclinic.model.Treatment;
import com.example.vetclinic.model.Appointment;
import com.example.vetclinic.model.Exam;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.DateTimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.zinternaltools.DateTimeChangeEvent;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.TableModelEvent;

/**
 *
 * @author alvaroc
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm(Controller controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        clientNameTextField = new javax.swing.JTextField();
        animalNameTextField = new javax.swing.JTextField();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        clientSearchTextField = new javax.swing.JTextField();
        clientShowAllButton = new javax.swing.JButton();
        clientNewButton = new javax.swing.JButton();
        clientRemoveButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        animalTable = new javax.swing.JTable();
        animalNewButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        animalSearchTextField = new javax.swing.JTextField();
        animalShowAllButton = new javax.swing.JButton();
        animalRemoveButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        vetTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        vetSearchTextField = new javax.swing.JTextField();
        vetShowAllButton = new javax.swing.JButton();
        vetNewButton = new javax.swing.JButton();
        vetRemoveButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        vetNameTextField = new javax.swing.JTextField();
        treatmentLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmentComments = new javax.swing.JTextArea();
        appointmentCommentsLabel = new javax.swing.JLabel();
        createAppointmentButton = new javax.swing.JButton();
        treatmentComboBox = new javax.swing.JComboBox<>();
        dateTimePicker = initDateTimePicker();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        treatmentTable = new javax.swing.JTable();
        treatmentNewButton = new javax.swing.JButton();
        treatmentFinishButton = new javax.swing.JButton();
        treatmentSearchTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        treatmentShowAllButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        appointmentTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        appointmentTextArea = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        examsList = new javax.swing.JList<>();
        addExamButton = new javax.swing.JButton();
        examsTextField = new javax.swing.JTextField();
        productPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        productSearchTextField = new javax.swing.JTextField();
        productShowAllButton = new javax.swing.JButton();
        productRemoveButton = new javax.swing.JButton();
        productNewButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        aboutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clientPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecionados"));

        jLabel1.setText("Cliente");

        jLabel2.setText("Animal");

        clientNameTextField.setEditable(false);

        animalNameTextField.setEditable(false);

        javax.swing.GroupLayout clientPanelLayout = new javax.swing.GroupLayout(clientPanel);
        clientPanel.setLayout(clientPanelLayout);
        clientPanelLayout.setHorizontalGroup(
            clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(clientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(animalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        clientPanelLayout.setVerticalGroup(
            clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(clientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(animalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setName(""); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        clientTable.setModel(new ClientTableModel(controller.getClientController(), new ArrayList<Client>()));
        clientTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientTable.getSelectionModel().addListSelectionListener((evt) -> {clientTableSelectionListener(evt);});
        clientTable.getModel().addTableModelListener((evt) -> { clientTableModelListener(evt); });
        jScrollPane2.setViewportView(clientTable);

        jLabel4.setText("Pesquisar:");

        clientSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                clientSearchTextFieldKeyTyped(evt);
            }
        });

        clientShowAllButton.setText("Todos");
        clientShowAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientShowAllButtonActionPerformed(evt);
            }
        });

        clientNewButton.setText("Novo");
        clientNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNewButtonActionPerformed(evt);
            }
        });

        clientRemoveButton.setText("Remover");
        clientRemoveButton.setBackground(new java.awt.Color(150, 80, 82));
        clientRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clientShowAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clientNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(clientRemoveButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(clientSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientShowAllButton)
                    .addComponent(clientNewButton)
                    .addComponent(clientRemoveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(549, 549, 549))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Animal"));

        animalTable.setModel(new AnimalTableModel(controller.getAnimalController(), controller.getClientController(), new ArrayList<Animal>()));
        animalTable.setToolTipText("");
        animalTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        animalTable.getSelectionModel().addListSelectionListener((evt) -> {animalTableSelectionListener(evt);});
        animalTable.getModel().addTableModelListener((evt) -> { animalTableModelListener(evt); });
        jScrollPane3.setViewportView(animalTable);

        animalNewButton.setText("Novo");
        animalNewButton.setEnabled(false);
        animalNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalNewButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Pesquisar:");

        animalSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                animalSearchTextFieldKeyTyped(evt);
            }
        });

        animalShowAllButton.setText("Todos");
        animalShowAllButton.setEnabled(false);
        animalShowAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalShowAllButtonActionPerformed(evt);
            }
        });

        animalRemoveButton.setText("Remover");
        animalRemoveButton.setBackground(new java.awt.Color(150, 80, 82));
        animalRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(animalSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(animalShowAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(animalNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(animalRemoveButton)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(animalNewButton)
                    .addComponent(jLabel5)
                    .addComponent(animalSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(animalShowAllButton)
                    .addComponent(animalRemoveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(549, 549, 549))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Busca", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Veterinário"));

        vetTable.setModel(new VetTableModel(controller.getVetController(), new ArrayList<Vet>()));
        vetTable.getSelectionModel().addListSelectionListener((evt) -> {vetTableSelectionListener(evt);});
        vetTable.getModel().addTableModelListener((evt) -> { vetTableModelListener(evt); });
        jScrollPane4.setViewportView(vetTable);

        jLabel6.setText("Pesquisar:");

        vetSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vetSearchTextFieldKeyTyped(evt);
            }
        });

        vetShowAllButton.setText("Todos");
        vetShowAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vetShowAllButtonActionPerformed(evt);
            }
        });

        vetNewButton.setText("Novo");
        vetNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vetNewButtonActionPerformed(evt);
            }
        });

        vetRemoveButton.setText("Remover");
        vetRemoveButton.setBackground(new java.awt.Color(150, 80, 82));
        vetRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vetRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vetSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(vetShowAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addComponent(vetNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(vetRemoveButton)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(vetSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vetShowAllButton)
                    .addComponent(vetNewButton)
                    .addComponent(vetRemoveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(549, 549, 549))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Agendar Consulta"));

        jLabel7.setText("Data/Hora");

        jLabel8.setText("Veterinário");

        vetNameTextField.setEditable(false);

        treatmentLabel.setText("Tratamento");

        appointmentComments.setColumns(20);
        appointmentComments.setRows(5);
        jScrollPane1.setViewportView(appointmentComments);

        appointmentCommentsLabel.setText("Comentários/Sintomas");

        createAppointmentButton.setText("Agendar");
        createAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAppointmentButtonActionPerformed(evt);
            }
        });

        treatmentComboBox.setModel(new TreatmentComboBoxModel(controller.getTreatmentController().retrieveAll())
        );
        treatmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(55, 55, 55)))
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(vetNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(treatmentLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(treatmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(107, 107, 107)
                                .addComponent(createAppointmentButton))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(appointmentCommentsLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(vetNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appointmentCommentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(treatmentLabel)
                    .addComponent(createAppointmentButton)
                    .addComponent(treatmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agendamento", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Tratamentos"));

        treatmentTable.setModel(new TreatmentTableModel(controller.getTreatmentController(), new ArrayList<Treatment>()));
        treatmentTable.getSelectionModel().addListSelectionListener((evt) -> {treatmentTableSelectionListener(evt);});
        jScrollPane5.setViewportView(treatmentTable);

        treatmentNewButton.setText("Novo");
        treatmentNewButton.setEnabled(false);
        treatmentNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentNewButtonActionPerformed(evt);
            }
        });

        treatmentFinishButton.setText("Finalizar");
        treatmentFinishButton.setBackground(new java.awt.Color(120, 80, 150));
        treatmentFinishButton.setEnabled(false);
        treatmentFinishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentFinishButtonActionPerformed(evt);
            }
        });

        treatmentSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                treatmentSearchTextFieldKeyTyped(evt);
            }
        });

        jLabel11.setText("Pesquisar:");

        treatmentShowAllButton.setText("Todos");
        treatmentShowAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentShowAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(treatmentSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(treatmentShowAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(treatmentFinishButton)
                        .addGap(18, 18, 18)
                        .addComponent(treatmentNewButton)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(treatmentFinishButton)
                    .addComponent(treatmentNewButton)
                    .addComponent(treatmentSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(treatmentShowAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultas"));

        appointmentTable.setModel(new AppointmentTableModel(new ArrayList<Appointment>()));
        appointmentTable.getSelectionModel().addListSelectionListener((evt) -> {appointmentTableSelectionListener(evt);});
        jScrollPane6.setViewportView(appointmentTable);

        appointmentTextArea.setEditable(false);
        appointmentTextArea.setColumns(20);
        appointmentTextArea.setRows(5);
        jScrollPane7.setViewportView(appointmentTextArea);

        jLabel12.setText("Comentários");

        jLabel13.setText("Exames");

        examsList.setListData(new Vector<String>());
        jScrollPane8.setViewportView(examsList);

        addExamButton.setText("Adicionar Exame");
        addExamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExamButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addExamButton))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                            .addComponent(examsTextField)
                            .addComponent(jScrollPane8)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(examsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addExamButton))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tratamentos", jPanel7);

        jLabel10.setText("Pesquisar");

        productSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                productSearchTextFieldKeyTyped(evt);
            }
        });

        productShowAllButton.setText("Todos");
        productShowAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productShowAllButtonActionPerformed(evt);
            }
        });

        productRemoveButton.setText("Remover");
        productRemoveButton.setBackground(new java.awt.Color(150, 80, 82));
        productRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productRemoveButtonActionPerformed(evt);
            }
        });

        productNewButton.setText("Novo");
        productNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNewButtonActionPerformed(evt);
            }
        });

        productTable.setModel(new ProductTableModel(controller.getProductController(), new ArrayList<Product>()));
        jScrollPane9.setViewportView(productTable);

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane9)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(productSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(productShowAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                        .addComponent(productNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(productRemoveButton)))
                .addContainerGap())
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(productSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productShowAllButton)
                    .addComponent(productRemoveButton)
                    .addComponent(productNewButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Produtos", productPanel);

        aboutMenu.setText("Sobre");
        aboutMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                aboutMenuMenuSelected(evt);
            }
        });
        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1)
                    .addComponent(clientPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clientPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private DateTimePicker initDateTimePicker() {
        DatePickerSettings datePickerSettings = new DatePickerSettings();
        TimePickerSettings timePickerSettings = new TimePickerSettings();

        DateTimePicker picker = new DateTimePicker(datePickerSettings, timePickerSettings);
        datePickerSettings.setAllowEmptyDates(false);
        datePickerSettings.setDateRangeLimits(LocalDate.now(), LocalDate.MAX);

        timePickerSettings.setVetoPolicy((lt) -> {
            int hour = lt.getHour();
            return hour >= 8 && hour <= 18;
        });

        return picker;
    }

    private void clientShowAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientShowAllButtonActionPerformed
        ClientTableModel model = (ClientTableModel) clientTable.getModel();
        List<Object> items = new ArrayList<>(controller.getClientController().retrieveAll());
        model.addListOfItems(items);
    }//GEN-LAST:event_clientShowAllButtonActionPerformed

    private void clientNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNewButtonActionPerformed
        ClientTableModel model = (ClientTableModel) clientTable.getModel();
        Client client = controller.getClientController().create();
        model.addItem(client);
        controller.setCurrentClient(client);
        clientNameTextField.setText(client.getName());
    }//GEN-LAST:event_clientNewButtonActionPerformed

    private void animalTableEnable(boolean enable) {
        animalNewButton.setEnabled(enable);
        animalShowAllButton.setEnabled(enable);

        AnimalTableModel model = (AnimalTableModel) animalTable.getModel();
        model.clear();
    }

    private void clientTableSelectionListener(ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }

        ClientTableModel model = (ClientTableModel) clientTable.getModel();
        ListSelectionModel lsm = (ListSelectionModel) evt.getSource();
        int row = lsm.getMaxSelectionIndex();

        animalTableEnable(row >= 0);

        // table model list may be empty if we try to delete the last element
        if (row >= 0 && !model.isEmpty()) {
            Client client = (Client) model.getItem(row);
            controller.setCurrentClient(client);
            clientNameTextField.setText(client.getName());
        } else {
            clientNameTextField.setText("");
            controller.setCurrentClient(null);
        }
    }

    private void clientTableModelListener(TableModelEvent evt) {
        int type = evt.getType();
        int row = evt.getFirstRow();

        if (type == TableModelEvent.UPDATE) {
            ClientTableModel model = (ClientTableModel) clientTable.getModel();
            if (!model.isEmpty()) {
                Client client = (Client) model.getItem(row);
                controller.setCurrentClient(client);
                clientNameTextField.setText(client.getName());
            }
        }
    }

    private void animalTableModelListener(TableModelEvent evt) {
        int type = evt.getType();
        int row = evt.getFirstRow();

        if (type == TableModelEvent.UPDATE) {
            AnimalTableModel model = (AnimalTableModel) animalTable.getModel();
            if (!model.isEmpty()) {
                Animal animal = (Animal) model.getItem(row);
                controller.setCurrentAnimal(animal);
                animalNameTextField.setText(animal.getName());
            }
        }
    }

    private void animalTableSelectionListener(ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }

        AnimalTableModel model = (AnimalTableModel) animalTable.getModel();
        ListSelectionModel lsm = (ListSelectionModel) evt.getSource();
        int row = lsm.getMaxSelectionIndex();

        // table model list may be empty if we try to delete the last element
        if (row >= 0 && !model.isEmpty()) {
            Animal animal = (Animal) model.getItem(row);
            controller.setCurrentAnimal(animal);
            animalNameTextField.setText(animal.getName());
            treatmentNewButton.setEnabled(true);
        } else {
            animalNameTextField.setText("");
            controller.setCurrentAnimal(null);
            treatmentNewButton.setEnabled(false);
        }
    }

    private void animalNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalNewButtonActionPerformed
        AnimalTableModel animalModel = (AnimalTableModel) animalTable.getModel();
        ClientTableModel clientModel = (ClientTableModel) clientTable.getModel();

        int row = clientTable.getSelectedRow();;
        if (row >= 0) {
            Client client = (Client) clientModel.getItem(row);
            Animal animal = controller.getAnimalController().create(client);
            animalModel.addItem(animal);
        }
    }//GEN-LAST:event_animalNewButtonActionPerformed

    private void vetShowAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vetShowAllButtonActionPerformed
        VetTableModel model = (VetTableModel) vetTable.getModel();
        List<Object> items = new ArrayList<>(controller.getVetController().retrieveAll());
        model.addListOfItems(items);
    }//GEN-LAST:event_vetShowAllButtonActionPerformed

    private void vetNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vetNewButtonActionPerformed
        VetTableModel model = (VetTableModel) vetTable.getModel();
        Vet vet = controller.getVetController().create();
        model.addItem(vet);
        controller.setCurrentVet(vet);
    }//GEN-LAST:event_vetNewButtonActionPerformed

    private void vetTableSelectionListener(ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }

        VetTableModel model = (VetTableModel) vetTable.getModel();
        ListSelectionModel lsm = (ListSelectionModel) evt.getSource();
        int row = lsm.getMaxSelectionIndex();

        //animalTableEnable(row >= 0);
        // table model list may be empty if we try to delete the last element
        if (row >= 0 && !model.isEmpty()) {
            Vet vet = (Vet) model.getItem(row);
            controller.setCurrentVet(vet);
            vetNameTextField.setText(vet.getName());
            createAppointmentButton.setEnabled(true);
        } else {
            vetNameTextField.setText("");
            controller.setCurrentVet(null);
            createAppointmentButton.setEnabled(false);
        }
    }

    private void vetTableModelListener(TableModelEvent evt) {
        int type = evt.getType();
        int row = evt.getFirstRow();

        if (type == TableModelEvent.UPDATE) {
            VetTableModel model = (VetTableModel) vetTable.getModel();
            if (!model.isEmpty()) {
                Vet vet = (Vet) model.getItem(row);
                controller.setCurrentVet(vet);
                vetNameTextField.setText(vet.getName());
                createAppointmentButton.setEnabled(true);
            }
        }
    }

    private void animalRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalRemoveButtonActionPerformed
        AnimalTableModel model = (AnimalTableModel) animalTable.getModel();
        int row = animalTable.getSelectedRow();
        if (row >= 0) {
            controller.getAnimalController().delete((Animal) model.getItem(row));
            model.removeItem(row);
        }
    }//GEN-LAST:event_animalRemoveButtonActionPerformed

    private void vetRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vetRemoveButtonActionPerformed
        VetTableModel model = (VetTableModel) vetTable.getModel();

        int row = vetTable.getSelectedRow();
        if (row >= 0) {
            controller.getVetController().delete((Vet) model.getItem(row));
            model.removeItem(row);
        }
    }//GEN-LAST:event_vetRemoveButtonActionPerformed

    private void addExamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExamButtonActionPerformed
        String examName = examsTextField.getText();
        int row = appointmentTable.getSelectedRow();

        if (examName.isBlank() || row < 0) {
            return;
        }

        AppointmentTableModel model = (AppointmentTableModel) appointmentTable.getModel();
        Appointment appointment = (Appointment) model.getItem(row);

        Exam exam = controller.getExamController().create(examName, appointment);
        ListModel examsModel = examsList.getModel();
        int size = examsModel.getSize();
        String[] exams = new String[size + 1];

        for (int i = 0; i < size; i++) {
            exams[i] = (String) examsModel.getElementAt(i);
        }
        exams[size] = exam.getName();

        examsList.setListData(exams);
        examsTextField.setText("");
    }//GEN-LAST:event_addExamButtonActionPerformed

    private void productShowAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productShowAllButtonActionPerformed
        ProductTableModel model = (ProductTableModel) productTable.getModel();
        List<Object> items = new ArrayList<>(controller.getProductController().retrieveAll());
        model.addListOfItems(items);
    }//GEN-LAST:event_productShowAllButtonActionPerformed

    private void productRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productRemoveButtonActionPerformed
        ProductTableModel model = (ProductTableModel) productTable.getModel();

        int row = productTable.getSelectedRow();
        if (row >= 0) {
            controller.getProductController().delete((Product) model.getItem(row));
            model.removeItem(row);
        }
    }//GEN-LAST:event_productRemoveButtonActionPerformed

    private void productNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNewButtonActionPerformed
        ProductTableModel model = (ProductTableModel) productTable.getModel();
        Product prod = controller.getProductController().create();
        model.addItem(prod);
    }//GEN-LAST:event_productNewButtonActionPerformed

    private void productSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productSearchTextFieldKeyTyped
        ProductTableModel model = (ProductTableModel) productTable.getModel();
        String name = productSearchTextField.getText();
        List<Object> items = new ArrayList<>(controller.getProductController().retrieveBySimilarName(name));
        model.addListOfItems(items);
    }//GEN-LAST:event_productSearchTextFieldKeyTyped

    private void clientRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientRemoveButtonActionPerformed
        ClientTableModel model = (ClientTableModel) clientTable.getModel();

        int row = clientTable.getSelectedRow();
        if (row >= 0) {
            controller.getClientController().delete((Client) model.getItem(row));
            model.removeItem(row);
        }
    }//GEN-LAST:event_clientRemoveButtonActionPerformed

    private void clientSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientSearchTextFieldKeyTyped
        ClientTableModel model = (ClientTableModel) clientTable.getModel();
        String name = clientSearchTextField.getText();
        List<Object> items = new ArrayList<>(controller.getClientController().retrieveBySimilarName(name));
        model.addListOfItems(items);
    }//GEN-LAST:event_clientSearchTextFieldKeyTyped

    private void animalShowAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalShowAllButtonActionPerformed
        AnimalTableModel animalModel = (AnimalTableModel) animalTable.getModel();
        ClientTableModel clientModel = (ClientTableModel) clientTable.getModel();

        int row = clientTable.getSelectedRow();
        if (row >= 0) {
            Client owner = (Client) clientModel.getItem(row);
            List<Object> items = new ArrayList<>(controller.getAnimalController().retrieveAllFromOwner(owner));
            animalModel.addListOfItems(items);
        }
    }//GEN-LAST:event_animalShowAllButtonActionPerformed

    private void animalSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_animalSearchTextFieldKeyTyped
        AnimalTableModel model = (AnimalTableModel) animalTable.getModel();
        String name = animalSearchTextField.getText();
        List<Object> items = new ArrayList<>(controller.getAnimalController().retrieveBySimilarName(name));
        model.addListOfItems(items);
    }//GEN-LAST:event_animalSearchTextFieldKeyTyped

    private void vetSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vetSearchTextFieldKeyTyped
        VetTableModel model = (VetTableModel) vetTable.getModel();
        String name = vetSearchTextField.getText();
        List<Object> items = new ArrayList<>(controller.getVetController().retrieveBySimilarName(name));
        model.addListOfItems(items);
    }//GEN-LAST:event_vetSearchTextFieldKeyTyped

    private void createAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAppointmentButtonActionPerformed
        LocalDate _date = dateTimePicker.getDatePicker().getDate();
        LocalTime _time = dateTimePicker.getTimePicker().getTime();
        Vet vet = controller.getCurrentVet();

        if (_date == null || _time == null || vet == null) {
            return;
        }

        LocalDateTime dateTime = LocalDateTime.of(_date, _time);
        Instant instant = dateTime.atZone(ZoneId.systemDefault()).toInstant();
        Date date = Date.from(instant);

        String report = appointmentComments.getText();
        
        String treatmentName = (String) treatmentComboBox.getSelectedItem();
        Treatment treatment = controller.getTreatmentController().retrieveByName(treatmentName);

        controller.getAppointmentController().create(date, report, vet, treatment);

        appointmentComments.setText("");
        dateTimePicker.clear();
    }//GEN-LAST:event_createAppointmentButtonActionPerformed

    private void treatmentNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentNewButtonActionPerformed
        TreatmentTableModel model = (TreatmentTableModel) treatmentTable.getModel();
        Animal animal = controller.getCurrentAnimal();

        if (animal == null) {
            return;
        }

        Treatment t = controller.getTreatmentController().create("", animal, new Date(), null);
        model.addItem(t);
    }//GEN-LAST:event_treatmentNewButtonActionPerformed

    private void treatmentFinishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentFinishButtonActionPerformed
        TreatmentTableModel model = (TreatmentTableModel) treatmentTable.getModel();
        int row = treatmentTable.getSelectedRow();

        if (row >= 0 && !model.isEmpty()) {
            Treatment t = (Treatment) model.getItem(row);
            if (t.getDateEnd() == null) {
                model.setDateEnd(new Date(), row);
            }
        }
    }//GEN-LAST:event_treatmentFinishButtonActionPerformed

    private void treatmentShowAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentShowAllButtonActionPerformed
        TreatmentTableModel model = (TreatmentTableModel) treatmentTable.getModel();
        List<Object> items = new ArrayList<>(controller.getTreatmentController().retrieveAll());
        model.addListOfItems(items);
    }//GEN-LAST:event_treatmentShowAllButtonActionPerformed

    private void appointmentTableShowAll(Treatment treatment) {
        AppointmentTableModel model = (AppointmentTableModel) appointmentTable.getModel();
        List<Object> items = new ArrayList<>(controller.getAppointmentController().retrieveByTreatment(treatment));
        model.addListOfItems(items);
    }

    private void appointmentTableSelectionListener(ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }

        AppointmentTableModel model = (AppointmentTableModel) appointmentTable.getModel();
        ListSelectionModel lsm = (ListSelectionModel) evt.getSource();
        int row = lsm.getMaxSelectionIndex();

        if (row >= 0 && !model.isEmpty()) {
            Appointment a = (Appointment) model.getItem(row);
            appointmentTextArea.setText(a.getReport());
            List<Exam> exams = controller.getExamController().retrieveByAppointment(a);
            List<String> names = exams.stream().map((elem) -> elem.getName()).toList();
            examsList.setListData(new Vector<>(names));
        } else {
            appointmentTextArea.setText("");
            examsList.setListData(new Vector<>());
        }
    }

    private void treatmentTableSelectionListener(ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }

        TreatmentTableModel model = (TreatmentTableModel) treatmentTable.getModel();
        ListSelectionModel lsm = (ListSelectionModel) evt.getSource();
        int row = lsm.getMaxSelectionIndex();

        if (row >= 0 && !model.isEmpty()) {
            Treatment t = (Treatment) model.getItem(row);
            treatmentFinishButton.setEnabled(t.getDateEnd() == null);
            appointmentTableShowAll(t);
        } else {
            treatmentFinishButton.setEnabled(false);
        }
    }

    private void treatmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentComboBoxActionPerformed
        String name = (String) treatmentComboBox.getSelectedItem();
        System.out.println(name);
    }//GEN-LAST:event_treatmentComboBoxActionPerformed

    private void treatmentSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_treatmentSearchTextFieldKeyTyped
        TreatmentTableModel model = (TreatmentTableModel) treatmentTable.getModel();
        String name = treatmentSearchTextField.getText();
        List<Object> items = new ArrayList<>(controller.getTreatmentController().retrieveBySimilarName(name));
        model.addListOfItems(items);
    }//GEN-LAST:event_treatmentSearchTextFieldKeyTyped

    private void aboutMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_aboutMenuMenuSelected
        JOptionPane.showMessageDialog(this, "VetClinic é um simples sistema de gerenciamento de uma\nclínica veterinária feito em Java utilizando a arquitetura \nMVC.\n\nTrabalho realizado para disciplina TT001 / 2024.\n\nAutor: Álvaro Costa (246909)",
                "Sobre", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_aboutMenuMenuSelected

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        launch(Controller.getInstance());
    }

    public static void launch(Controller controller) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new FlatIntelliJLaf());
                } catch (Exception e) {
                    System.err.println(e);
                    return;
                }
                new MainForm(controller).setVisible(true);
            }
        });
    }

    private Controller controller;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JButton addExamButton;
    private javax.swing.JTextField animalNameTextField;
    private javax.swing.JButton animalNewButton;
    private javax.swing.JButton animalRemoveButton;
    private javax.swing.JTextField animalSearchTextField;
    private javax.swing.JButton animalShowAllButton;
    private javax.swing.JTable animalTable;
    private javax.swing.JTextArea appointmentComments;
    private javax.swing.JLabel appointmentCommentsLabel;
    private javax.swing.JTable appointmentTable;
    private javax.swing.JTextArea appointmentTextArea;
    private javax.swing.JTextField clientNameTextField;
    private javax.swing.JButton clientNewButton;
    private javax.swing.JPanel clientPanel;
    private javax.swing.JButton clientRemoveButton;
    private javax.swing.JTextField clientSearchTextField;
    private javax.swing.JButton clientShowAllButton;
    private javax.swing.JTable clientTable;
    private javax.swing.JButton createAppointmentButton;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private javax.swing.JList<String> examsList;
    private javax.swing.JTextField examsTextField;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton productNewButton;
    private javax.swing.JPanel productPanel;
    private javax.swing.JButton productRemoveButton;
    private javax.swing.JTextField productSearchTextField;
    private javax.swing.JButton productShowAllButton;
    private javax.swing.JTable productTable;
    private javax.swing.JComboBox<String> treatmentComboBox;
    private javax.swing.JButton treatmentFinishButton;
    private javax.swing.JLabel treatmentLabel;
    private javax.swing.JButton treatmentNewButton;
    private javax.swing.JTextField treatmentSearchTextField;
    private javax.swing.JButton treatmentShowAllButton;
    private javax.swing.JTable treatmentTable;
    private javax.swing.JTextField vetNameTextField;
    private javax.swing.JButton vetNewButton;
    private javax.swing.JButton vetRemoveButton;
    private javax.swing.JTextField vetSearchTextField;
    private javax.swing.JButton vetShowAllButton;
    private javax.swing.JTable vetTable;
    // End of variables declaration//GEN-END:variables
}
